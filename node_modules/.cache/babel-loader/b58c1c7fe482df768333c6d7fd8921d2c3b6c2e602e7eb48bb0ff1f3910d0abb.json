{"ast":null,"code":"var _jsxFileName = \"/Users/abriolon/Documents/Pro/Pro-perso/exercice/meal-generator/src/pages/Ingredient.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ingredient = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    ingredient\n  } = useParams();\n  const [ingredientData, setIngredientData] = useState([]);\n  const url = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\n  useEffect(() => {\n    fetch(url + `${ingredient}`).then(res => res.json()).then(data => {\n      setIngredientData(data.meals);\n      setIsLoading(true);\n    }, [ingredient]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: ingredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-list\",\n        children: ingredientData.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: meal.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: meal.strMealThumb,\n            alt: meal.strMeal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Ingredient, \"vDKGF5heW+8rHPuLMCJiP35Pj54=\", false, function () {\n  return [useParams];\n});\n_c = Ingredient;\nexport default Ingredient;\nvar _c;\n$RefreshReg$(_c, \"Ingredient\");","map":{"version":3,"names":["useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Ingredient","_s","isLoading","setIsLoading","ingredient","ingredientData","setIngredientData","url","fetch","then","res","json","data","meals","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","meal","index","strMeal","src","strMealThumb","alt","_c","$RefreshReg$"],"sources":["/Users/abriolon/Documents/Pro/Pro-perso/exercice/meal-generator/src/pages/Ingredient.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst Ingredient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { ingredient } = useParams();\n  const [ingredientData, setIngredientData] = useState([]);\n  const url = 'https://www.themealdb.com/api/json/v1/1/filter.php?i=';\n\n  useEffect(() => {\n    fetch(url + `${ingredient}`)\n      .then(res => res.json())\n      .then(data => {\n        setIngredientData(data.meals);\n        setIsLoading(true);\n      }\n        , [ingredient]\n      )\n  });\n\n  return (\n    <div>\n      {isLoading ? (\n        <>\n        <h1>{ingredient}</h1>\n        <div className=\"meal-list\">\n\n        {ingredientData.map((meal, index) => (\n          <div key={index}>\n            <h2>{meal.strMeal}</h2>\n            <img src={meal.strMealThumb} alt={meal.strMeal} />\n          </div>\n        ))}\n\n      </div>\n        </>\n      ) : <p>Loading...</p>}\n    </div>\n  );\n}\n\nexport default Ingredient;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEU;EAAW,CAAC,GAAGT,SAAS,EAAE;EAClC,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMa,GAAG,GAAG,uDAAuD;EAEnEd,SAAS,CAAC,MAAM;IACde,KAAK,CAACD,GAAG,GAAI,GAAEH,UAAW,EAAC,CAAC,CACzBK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZN,iBAAiB,CAACM,IAAI,CAACC,KAAK,CAAC;MAC7BV,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EACG,CAACC,UAAU,CAAC,CACf;EACL,CAAC,CAAC;EAEF,oBACEP,OAAA;IAAAiB,QAAA,EACGZ,SAAS,gBACRL,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACAjB,OAAA;QAAAiB,QAAA,EAAKV;MAAU;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBrB,OAAA;QAAKsB,SAAS,EAAC,WAAW;QAAAL,QAAA,EAEzBT,cAAc,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC9BzB,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAAiB,QAAA,EAAKO,IAAI,CAACE;UAAO;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACvBrB,OAAA;YAAK2B,GAAG,EAAEH,IAAI,CAACI,YAAa;YAACC,GAAG,EAAEL,IAAI,CAACE;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA,GAF1CI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAIhB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEE;IAAA,gBACD,gBACDrB,OAAA;MAAAiB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACjB;AAEV,CAAC;AAAAjB,EAAA,CApCKD,UAAU;EAAA,QAESL,SAAS;AAAA;AAAAgC,EAAA,GAF5B3B,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}